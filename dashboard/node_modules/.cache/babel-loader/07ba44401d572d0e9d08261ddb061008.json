{"ast":null,"code":"var _jsxFileName = \"/home/jason/projects/InsureCam/dashboard/src/Views/InsuranceView/index.jsx\";\nimport React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport { Card } from 'react-bootstrap';\nimport Loading from '../../Components/Loading';\nimport MenuBar from \"../../Components/MenuBar\";\nimport ViolationMap from \"../../Components/ViolationMap\";\nimport ViolationHistory from \"../../Components/ViolationHistory\";\nimport VehicleInfo from \"../../Components/VehicleInfo\";\nimport Logo from \"../../Assets/CrowdDashLogoCropped.png\"; // import RiskCalulations from \"../../Components/RiskCalculations\";\n// import { serverUrl } from \"../../config\";\n\nimport \"./insurance.css\";\n\nclass InsuranceView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const profiles = await require(\"../../generatedData\");\n      this.setState({\n        profiles: profiles.profiles\n      });\n      setTimeout(() => {\n        this.setState({\n          isLoading: false\n        });\n      }, 1000);\n    };\n\n    this.searchFor = searchString => {\n      console.log(\"searchfor\", searchString);\n      let found = false;\n      this.state.profiles.forEach(profile => {\n        if (profile.licensePlate === searchString) {\n          found = true;\n          this.setState({\n            selection: profile\n          });\n        }\n      });\n      if (!found) this.setState({\n        selection: false\n      });\n    };\n\n    this.createModal = () => {\n      return React.createElement(Modal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"this.state.openComponent\");\n    };\n\n    this.openModal = type => {\n      return true;\n    };\n\n    this.render = () => {\n      if (this.state.selection) {\n        console.log(\"props in insurance\", this.props);\n        return React.createElement(\"div\", {\n          className: \"fullscreen dashboardBG\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, this.state.isLoading ? React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }) : null, React.createElement(MenuBar, {\n          showSearch: true,\n          searchFor: this.searchFor,\n          setIsSignedIn: this.props.setIsSignedIn,\n          title: \"Search By License Plate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"cardRow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Card, {\n          id: \"vehicleCard\",\n          onClick: () => this.openModal(\"history\"),\n          className: \"text-center card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          className: \"cardHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"Vehicle Information\"), React.createElement(VehicleInfo, {\n          selection: this.state.selection,\n          className: \"informationCard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"cardRow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Card, {\n          id: \"historyCard\",\n          onClick: () => this.openModal(\"history\"),\n          className: \"text-center card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          className: \"cardHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Logged Violations\"), React.createElement(ViolationHistory, {\n          selection: this.state.selection,\n          className: \"historyCard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        })), React.createElement(Card, {\n          id: \"mapCard\",\n          onClick: () => this.openModal(\"map\"),\n          className: \"text-center card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          className: \"cardHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Violation Locations\"), React.createElement(ViolationMap, {\n          selection: this.state.selection,\n          className: \"mapCard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }))), this.createModal());\n      } else {\n        return React.createElement(\"div\", {\n          className: \"fullscreen dashboardBG\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, this.state.isLoading ? React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }) : null, React.createElement(MenuBar, {\n          showSearch: true,\n          searchFor: this.searchFor,\n          setIsSignedIn: this.props.setIsSignedIn,\n          title: \"Search By License Plate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"noSearches\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: Logo,\n          alt: \"CrowdDash\",\n          className: \"logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(\"h1\", {\n          className: \"noSearchText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, this.state.selection === false ? \"No Logs found for that license plate\" : \"Search for a License Plate to See Logs\")));\n      }\n    };\n\n    this.state = {\n      isSignedIn: props.isSignedIn,\n      isLoading: true,\n      licensePlate: undefined,\n      modal: {\n        open: false,\n        component: undefined\n      },\n      isSignUp: false,\n      violations: undefined,\n      profiles: undefined,\n      selection: undefined\n    };\n  }\n\n}\n\nexport default InsuranceView;","map":{"version":3,"sources":["/home/jason/projects/InsureCam/dashboard/src/Views/InsuranceView/index.jsx"],"names":["React","Component","Modal","Card","Loading","MenuBar","ViolationMap","ViolationHistory","VehicleInfo","Logo","InsuranceView","constructor","props","componentDidMount","profiles","require","setState","setTimeout","isLoading","searchFor","searchString","console","log","found","state","forEach","profile","licensePlate","selection","createModal","openModal","type","render","setIsSignedIn","isSignedIn","undefined","modal","open","component","isSignUp","violations"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport { Card } from 'react-bootstrap'\nimport Loading from '../../Components/Loading';\nimport MenuBar from \"../../Components/MenuBar\";\nimport ViolationMap from \"../../Components/ViolationMap\";\nimport ViolationHistory from \"../../Components/ViolationHistory\";\nimport VehicleInfo from \"../../Components/VehicleInfo\";\nimport Logo from \"../../Assets/CrowdDashLogoCropped.png\";\n\n// import RiskCalulations from \"../../Components/RiskCalculations\";\n// import { serverUrl } from \"../../config\";\n\nimport \"./insurance.css\";\n\nclass InsuranceView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSignedIn: props.isSignedIn,\n            isLoading: true,\n            licensePlate: undefined,\n            modal: {\n                open: false,\n                component: undefined,\n            },\n            isSignUp: false,\n            violations: undefined,\n            profiles: undefined,\n            selection: undefined,\n        }\n    }\n\n    componentDidMount = async () => {\n        const profiles = await require(\"../../generatedData\");\n        this.setState({ profiles: profiles.profiles })\n        setTimeout(() => {\n            this.setState({ isLoading: false })\n        }, 1000)\n    }\n\n    searchFor = (searchString) => {\n        console.log(\"searchfor\", searchString)\n        let found = false\n        this.state.profiles.forEach(profile => {\n            if (profile.licensePlate === searchString) {\n                found = true;\n                this.setState({ selection: profile })\n            }\n        })\n\n        if (!found) this.setState({ selection: false })\n    }\n\n    createModal = () => {\n        return (\n            <Modal>\n                this.state.openComponent\n            </Modal>\n        )\n    }\n\n    openModal = (type) => {\n        return true;\n    }\n\n    render = () => {\n        if (this.state.selection) {\n            console.log(\"props in insurance\", this.props)\n            return (\n                <div className=\"fullscreen dashboardBG\">\n                    {this.state.isLoading ? <Loading /> : null}\n                    <MenuBar showSearch={true} searchFor={this.searchFor} setIsSignedIn={this.props.setIsSignedIn} title={\"Search By License Plate\"}/>\n                    <div className=\"cardRow\">\n                        <Card id=\"vehicleCard\" onClick={() => this.openModal(\"history\")} className=\"text-center card\">\n                            <Card.Header className=\"cardHeader\">Vehicle Information</Card.Header>\n                            <VehicleInfo selection={this.state.selection} className=\"informationCard\" />\n                        </Card>\n                    </div>\n\n                    <div className=\"cardRow\">\n                        <Card id=\"historyCard\" onClick={() => this.openModal(\"history\")} className=\"text-center card\">\n                            <Card.Header className=\"cardHeader\">Logged Violations</Card.Header>\n                            <ViolationHistory selection={this.state.selection} className=\"historyCard\" />\n                        </Card>\n\n                        <Card id=\"mapCard\" onClick={() => this.openModal(\"map\")} className=\"text-center card\">\n                            <Card.Header className=\"cardHeader\">Violation Locations</Card.Header>\n                            <ViolationMap selection={this.state.selection} className=\"mapCard\" />\n                        </Card>\n                    </div>\n                    {this.createModal()}\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"fullscreen dashboardBG\">\n                    {this.state.isLoading ? <Loading /> : null}\n                    <MenuBar showSearch={true} searchFor={this.searchFor} setIsSignedIn={this.props.setIsSignedIn} title={\"Search By License Plate\"}/>\n                    <div className=\"noSearches\">\n                        <img src={Logo} alt=\"CrowdDash\" className=\"logo\" />\n                        <h1 className=\"noSearchText\">{this.state.selection === false ? \"No Logs found for that license plate\" : \"Search for a License Plate to See Logs\"}</h1>\n                    </div>\n                </div>\n            )\n\n        }\n    }\n}\n\nexport default InsuranceView;"]},"metadata":{},"sourceType":"module"}