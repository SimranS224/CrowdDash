{"ast":null,"code":"var _jsxFileName = \"/home/jason/projects/InsureCam/dashboard/src/Components/ViolationMap/index.jsx\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport \"./map.css\";\nconst GMAPSAPI = \"AIzaSyDWr-o2geOZx5XESJBxJ2tsD9DTWjpKJwA\";\nconst style = [{\n  \"featureType\": \"all\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"saturation\": 36\n  }, {\n    \"color\": \"#000000\"\n  }, {\n    \"lightness\": 40\n  }]\n}, {\n  \"featureType\": \"all\",\n  \"elementType\": \"labels.text.stroke\",\n  \"stylers\": [{\n    \"visibility\": \"on\"\n  }, {\n    \"color\": \"#000000\"\n  }, {\n    \"lightness\": 16\n  }]\n}, {\n  \"featureType\": \"all\",\n  \"elementType\": \"labels.icon\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"featureType\": \"administrative\",\n  \"elementType\": \"geometry.fill\",\n  \"stylers\": [{\n    \"color\": \"#000000\"\n  }, {\n    \"lightness\": 20\n  }]\n}, {\n  \"featureType\": \"administrative\",\n  \"elementType\": \"geometry.stroke\",\n  \"stylers\": [{\n    \"color\": \"#000000\"\n  }, {\n    \"lightness\": 17\n  }, {\n    \"weight\": 1.2\n  }]\n}, {\n  \"featureType\": \"landscape\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#000000\"\n  }, {\n    \"lightness\": 20\n  }]\n}, {\n  \"featureType\": \"poi\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#000000\"\n  }, {\n    \"lightness\": 21\n  }]\n}, {\n  \"featureType\": \"road.highway\",\n  \"elementType\": \"geometry.fill\",\n  \"stylers\": [{\n    \"color\": \"#000000\"\n  }, {\n    \"lightness\": 17\n  }]\n}, {\n  \"featureType\": \"road.highway\",\n  \"elementType\": \"geometry.stroke\",\n  \"stylers\": [{\n    \"color\": \"#000000\"\n  }, {\n    \"lightness\": 29\n  }, {\n    \"weight\": 0.2\n  }]\n}, {\n  \"featureType\": \"road.arterial\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#000000\"\n  }, {\n    \"lightness\": 18\n  }]\n}, {\n  \"featureType\": \"road.local\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#000000\"\n  }, {\n    \"lightness\": 16\n  }]\n}, {\n  \"featureType\": \"transit\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#000000\"\n  }, {\n    \"lightness\": 19\n  }]\n}, {\n  \"featureType\": \"water\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#000000\"\n  }, {\n    \"lightness\": 17\n  }]\n}]; // const style = [\n//     {\n//         \"featureType\": \"water\",\n//         \"elementType\": \"geometry\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#e9e9e9\"\n//             },\n//             {\n//                 \"lightness\": 17\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"landscape\",\n//         \"elementType\": \"geometry\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#f5f5f5\"\n//             },\n//             {\n//                 \"lightness\": 20\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"road.highway\",\n//         \"elementType\": \"geometry.fill\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#ffffff\"\n//             },\n//             {\n//                 \"lightness\": 17\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"road.highway\",\n//         \"elementType\": \"geometry.stroke\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#ffffff\"\n//             },\n//             {\n//                 \"lightness\": 29\n//             },\n//             {\n//                 \"weight\": 0.2\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"road.arterial\",\n//         \"elementType\": \"geometry\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#ffffff\"\n//             },\n//             {\n//                 \"lightness\": 18\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"road.local\",\n//         \"elementType\": \"geometry\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#ffffff\"\n//             },\n//             {\n//                 \"lightness\": 16\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"poi\",\n//         \"elementType\": \"geometry\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#f5f5f5\"\n//             },\n//             {\n//                 \"lightness\": 21\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"poi.park\",\n//         \"elementType\": \"geometry\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#dedede\"\n//             },\n//             {\n//                 \"lightness\": 21\n//             }\n//         ]\n//     },\n//     {\n//         \"elementType\": \"labels.text.stroke\",\n//         \"stylers\": [\n//             {\n//                 \"visibility\": \"on\"\n//             },\n//             {\n//                 \"color\": \"#ffffff\"\n//             },\n//             {\n//                 \"lightness\": 16\n//             }\n//         ]\n//     },\n//     {\n//         \"elementType\": \"labels.text.fill\",\n//         \"stylers\": [\n//             {\n//                 \"saturation\": 36\n//             },\n//             {\n//                 \"color\": \"#333333\"\n//             },\n//             {\n//                 \"lightness\": 40\n//             }\n//         ]\n//     },\n//     {\n//         \"elementType\": \"labels.icon\",\n//         \"stylers\": [\n//             {\n//                 \"visibility\": \"off\"\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"transit\",\n//         \"elementType\": \"geometry\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#f2f2f2\"\n//             },\n//             {\n//                 \"lightness\": 19\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"administrative\",\n//         \"elementType\": \"geometry.fill\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#fefefe\"\n//             },\n//             {\n//                 \"lightness\": 20\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"administrative\",\n//         \"elementType\": \"geometry.stroke\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#fefefe\"\n//             },\n//             {\n//                 \"lightness\": 17\n//             },\n//             {\n//                 \"weight\": 1.2\n//             }\n//         ]\n//     }\n// ]\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%',\n  disableDefaultUI: true\n};\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const coords = await this.getCurrentPosition();\n\n      if (coords.latitude && coords.longitude) {\n        this.setState({\n          lat: coords.latitude,\n          lng: coords.longitude\n        }, this.updateMarkers);\n      } else {\n        this.setState({\n          isLoading: false\n        });\n      }\n    };\n\n    this.updateMarkers = async () => {\n      const locations = Object.values(this.props.selection.violations);\n      this.setState({\n        stores: locations,\n        isLoading: false\n      });\n    };\n\n    this.getCurrentPosition = () => {\n      return new Promise((resolve, reject) => navigator.geolocation ? navigator.geolocation.getCurrentPosition(({\n        coords\n      }) => resolve(coords), err => reject(\"Position not found. Error: \".concat(Object.entries(err).join(\" \")))) : reject(\"Device doesnt have position\"));\n    };\n\n    this.componentDidUpdate = async prevState => {\n      // console.log(\"prevProps\", prevProps.selection, \"curr\", this.props.selection)\n      if (!prevState.selection || prevState.selection !== this.props.selection) {\n        this.updateMarkers();\n      }\n    };\n\n    this.handleMarkerClick = violation => {\n      if (violation.violationID && violation.evidence.length > 0) {\n        window.location.href = \"/violation/\".concat(this.props.selection.licensePlate, \"/\").concat(violation.violationID);\n      } else {\n        console.log(\"violation\", violation.location);\n      }\n    };\n\n    this.displayMarkers = () => {\n      console.log(\"displaying markers\", this.state.selection);\n      return this.state.stores.map((store, index) => {\n        console.log(\"store\", store);\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.location.lat,\n            lng: store.location.lng\n          },\n          onClick: () => this.handleMarkerClick(store),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.render = () => {\n      console.log(\"center\", this.props.center);\n      if (this.state.isLoading) return React.createElement(\"div\", {\n        className: \"cardLoading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, \"Loading...\");\n      return React.createElement(Map, {\n        className: \"map\",\n        google: this.props.google,\n        zoom: 12,\n        style: mapStyles,\n        styles: style,\n        initialCenter: {\n          lat: this.state.lat,\n          lng: this.state.lng\n        },\n        disableDefaultUI: true,\n        options: {\n          styles: style,\n          FullscreenControl: false,\n          panControl: false,\n          mapTypeControl: false,\n          scrollwheel: false,\n          streetViewControl: false,\n          disableDefaultUI: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, this.displayMarkers());\n    };\n\n    this.state = {\n      lat: 43.444,\n      lng: -79.555,\n      isLoading: true,\n      selection: undefined,\n      stores: []\n    };\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: GMAPSAPI\n})(MapContainer);\n;","map":{"version":3,"sources":["/home/jason/projects/InsureCam/dashboard/src/Components/ViolationMap/index.jsx"],"names":["React","Component","Map","GoogleApiWrapper","Marker","GMAPSAPI","style","mapStyles","width","height","disableDefaultUI","MapContainer","constructor","props","componentDidMount","coords","getCurrentPosition","latitude","longitude","setState","lat","lng","updateMarkers","isLoading","locations","Object","values","selection","violations","stores","Promise","resolve","reject","navigator","geolocation","err","entries","join","componentDidUpdate","prevState","handleMarkerClick","violation","violationID","evidence","length","window","location","href","licensePlate","console","log","displayMarkers","state","map","store","index","render","center","google","styles","FullscreenControl","panControl","mapTypeControl","scrollwheel","streetViewControl","undefined","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nimport \"./map.css\";\n\nconst GMAPSAPI = \"AIzaSyDWr-o2geOZx5XESJBxJ2tsD9DTWjpKJwA\";\n\nconst style = [\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"saturation\": 36\n            },\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 40\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 17\n            },\n            {\n                \"weight\": 1.2\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 21\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 29\n            },\n            {\n                \"weight\": 0.2\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 18\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 19\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    }\n]\n// const style = [\n//     {\n//         \"featureType\": \"water\",\n//         \"elementType\": \"geometry\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#e9e9e9\"\n//             },\n//             {\n//                 \"lightness\": 17\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"landscape\",\n//         \"elementType\": \"geometry\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#f5f5f5\"\n//             },\n//             {\n//                 \"lightness\": 20\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"road.highway\",\n//         \"elementType\": \"geometry.fill\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#ffffff\"\n//             },\n//             {\n//                 \"lightness\": 17\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"road.highway\",\n//         \"elementType\": \"geometry.stroke\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#ffffff\"\n//             },\n//             {\n//                 \"lightness\": 29\n//             },\n//             {\n//                 \"weight\": 0.2\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"road.arterial\",\n//         \"elementType\": \"geometry\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#ffffff\"\n//             },\n//             {\n//                 \"lightness\": 18\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"road.local\",\n//         \"elementType\": \"geometry\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#ffffff\"\n//             },\n//             {\n//                 \"lightness\": 16\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"poi\",\n//         \"elementType\": \"geometry\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#f5f5f5\"\n//             },\n//             {\n//                 \"lightness\": 21\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"poi.park\",\n//         \"elementType\": \"geometry\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#dedede\"\n//             },\n//             {\n//                 \"lightness\": 21\n//             }\n//         ]\n//     },\n//     {\n//         \"elementType\": \"labels.text.stroke\",\n//         \"stylers\": [\n//             {\n//                 \"visibility\": \"on\"\n//             },\n//             {\n//                 \"color\": \"#ffffff\"\n//             },\n//             {\n//                 \"lightness\": 16\n//             }\n//         ]\n//     },\n//     {\n//         \"elementType\": \"labels.text.fill\",\n//         \"stylers\": [\n//             {\n//                 \"saturation\": 36\n//             },\n//             {\n//                 \"color\": \"#333333\"\n//             },\n//             {\n//                 \"lightness\": 40\n//             }\n//         ]\n//     },\n//     {\n//         \"elementType\": \"labels.icon\",\n//         \"stylers\": [\n//             {\n//                 \"visibility\": \"off\"\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"transit\",\n//         \"elementType\": \"geometry\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#f2f2f2\"\n//             },\n//             {\n//                 \"lightness\": 19\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"administrative\",\n//         \"elementType\": \"geometry.fill\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#fefefe\"\n//             },\n//             {\n//                 \"lightness\": 20\n//             }\n//         ]\n//     },\n//     {\n//         \"featureType\": \"administrative\",\n//         \"elementType\": \"geometry.stroke\",\n//         \"stylers\": [\n//             {\n//                 \"color\": \"#fefefe\"\n//             },\n//             {\n//                 \"lightness\": 17\n//             },\n//             {\n//                 \"weight\": 1.2\n//             }\n//         ]\n//     }\n// ]\n\nconst mapStyles = {\n    width: '100%',\n    height: '100%',\n    disableDefaultUI: true,\n}\n\nexport class MapContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lat: 43.444,\n            lng: -79.555,\n            isLoading: true,\n            selection: undefined,\n            stores: [],\n        }\n    }\n\n    componentDidMount = async () => {\n        const coords = await this.getCurrentPosition();\n        if (coords.latitude && coords.longitude) {\n            this.setState({ lat: coords.latitude, lng: coords.longitude }, this.updateMarkers)\n        } else {\n            this.setState({ isLoading: false })\n        }\n    }\n\n    updateMarkers = async () => {\n        const locations = Object.values(this.props.selection.violations)\n        this.setState({ stores: locations, isLoading: false })\n    }\n\n    getCurrentPosition = () => {\n        return new Promise((resolve, reject) =>\n            navigator.geolocation ?\n                navigator.geolocation.getCurrentPosition(({ coords }) => resolve(coords), (err) => reject(`Position not found. Error: ${Object.entries(err).join(\" \")}`)) :\n                reject(\"Device doesnt have position\")\n        )\n    }\n\n    componentDidUpdate = async (prevState) => {\n        // console.log(\"prevProps\", prevProps.selection, \"curr\", this.props.selection)\n        if (!prevState.selection || prevState.selection !== this.props.selection) {\n            this.updateMarkers()\n        }\n    }\n\n    handleMarkerClick = (violation) => {\n        if (violation.violationID && violation.evidence.length > 0) {\n            window.location.href = `/violation/${this.props.selection.licensePlate}/${violation.violationID}`\n        } else {\n            console.log(\"violation\", violation.location)\n        }\n    }\n\n\n    displayMarkers = () => {\n        console.log(\"displaying markers\", this.state.selection);\n        return this.state.stores.map((store, index) => {\n            console.log(\"store\", store)\n            return <Marker key={index} id={index} position={{\n                lat: store.location.lat,\n                lng: store.location.lng\n            }}\n                onClick={() => this.handleMarkerClick(store)} />\n        })\n    }\n\n    // displayCenter = () => {\n    //     return <Marker id={\"center\"} position={{\n    //         lat: this.state.lat,\n    //         lng: this.state.lng\n    //     }}\n    //         onClick={() => console.log(\"You clicked me!\")} />\n    // }\n\n    render = () => {\n        console.log(\"center\", this.props.center)\n        if (this.state.isLoading) return <div className=\"cardLoading\">Loading...</div>\n        return (\n            <Map\n                className=\"map\"\n                google={this.props.google}\n                zoom={12}\n                style={mapStyles}\n                styles={style}\n                initialCenter={{ lat: this.state.lat, lng: this.state.lng }}\n                disableDefaultUI={true}\n                options={{\n                    styles: style,\n                    FullscreenControl: false,\n                    panControl: false,\n                    mapTypeControl: false,\n                    scrollwheel: false,\n                    streetViewControl: false,\n                    disableDefaultUI: true,\n                }}            >\n                {this.displayMarkers()}\n                {/* {this.displayCenter()} */}\n            </Map>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: GMAPSAPI\n})(MapContainer);;"]},"metadata":{},"sourceType":"module"}