{"ast":null,"code":"var _jsxFileName = \"/home/jason/projects/InsureCam/dashboard/src/Views/InsuranceView/index.jsx\";\nimport React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport { Card } from 'react-bootstrap';\nimport { Table } from 'react-bootstrap';\nimport Loading from '../../Components/Loading';\nimport MenuBar from \"../../Components/MenuBar\";\nimport ViolationMap from \"../../Components/ViolationMap\";\nimport ViolationHistory from \"../../Components/ViolationHistory\";\nimport VehicleInfo from \"../../Components/VehicleInfo\";\nimport axios from \"axios\";\nimport { serverUrl } from \"../../config\";\nimport \"./insurance.css\";\n\nclass InsuranceView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const endpoint = serverUrl + \"/api/report/\";\n      console.log(endpoint);\n\n      try {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        console.log(data);\n        this.setState({\n          reports: data.data\n        });\n      } catch (err) {\n        this.handleError(err);\n      }\n\n      const profiles = await require(\"../../generatedData\");\n      this.setState({\n        profiles: profiles.profiles\n      });\n      setTimeout(() => {\n        this.setState({\n          isLoading: false\n        });\n      }, 100);\n    };\n\n    this.handleError = err => {\n      console.log(\"Error\", err);\n    };\n\n    this.searchFor = searchString => {\n      console.log(\"searchfor\", searchString);\n      let found = false;\n      this.state.profiles.forEach(profile => {\n        if (profile.licensePlate === searchString) {\n          found = true;\n          this.setState({\n            selection: profile\n          });\n        }\n      });\n      if (!found) this.setState({\n        selection: false\n      });\n    };\n\n    this.createModal = () => {\n      return React.createElement(Modal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"this.state.openComponent\");\n    };\n\n    this.openModal = type => {\n      return true;\n    };\n\n    this.handleMarkerClick = report => {\n      window.location.href = \"/report/\".concat(report.id);\n    };\n\n    this.render = () => {\n      if (this.state.isLoading) return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n\n      if (this.state.selection) {\n        console.log(\"props in insurance\", this.props);\n        return React.createElement(\"div\", {\n          className: \"fullscreen dashboardBG\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, this.state.isLoading ? React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }) : null, React.createElement(MenuBar, {\n          showSearch: true,\n          searchFor: this.searchFor,\n          setIsSignedIn: this.props.setIsSignedIn,\n          title: \"Search By License Plate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"cardRow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(Card, {\n          id: \"vehicleCard\",\n          onClick: () => this.openModal(\"history\"),\n          className: \"text-center card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          className: \"cardHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Vehicle Information\"), React.createElement(VehicleInfo, {\n          selection: this.state.selection,\n          className: \"informationCard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"cardRow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(Card, {\n          id: \"historyCard\",\n          onClick: () => this.openModal(\"history\"),\n          className: \"text-center card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          className: \"cardHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Logged Violations\"), React.createElement(ViolationHistory, {\n          selection: this.state.selection,\n          className: \"historyCard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        })), React.createElement(Card, {\n          id: \"mapCard\",\n          onClick: () => this.openModal(\"map\"),\n          className: \"text-center card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          className: \"cardHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"Violation Locations\"), React.createElement(ViolationMap, {\n          selection: this.state.selection,\n          className: \"mapCard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }))), this.createModal());\n      } else {\n        return React.createElement(\"div\", {\n          className: \"fullscreen dashboardBG\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, this.state.isLoading ? React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }) : null, React.createElement(MenuBar, {\n          showSearch: true,\n          searchFor: this.searchFor,\n          setIsSignedIn: this.props.setIsSignedIn,\n          title: \"Search By License Plate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }), React.createElement(\"h2\", {\n          className: \"noSearchText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Open Reports\"), React.createElement(\"div\", {\n          className: \"reportsWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(Table, {\n          responsive: true,\n          id: \"table\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          className: \"headerRow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          className: \"tableheader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"#\"), React.createElement(\"th\", {\n          className: \"tableheader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Report ID\"), React.createElement(\"th\", {\n          className: \"tableheader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"Analysis Status\"), React.createElement(\"th\", {\n          className: \"tableheader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Date\"))), React.createElement(\"tbody\", {\n          className: \"tableBody\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, this.state.reports.reverse().map((report, i) => {\n          return React.createElement(\"tr\", {\n            key: i,\n            className: \"linkToViolation\",\n            onClick: () => this.handleMarkerClick(report),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            className: \"tabletext\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, i + 1), React.createElement(\"td\", {\n            className: \"tabletext\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, report.id), React.createElement(\"td\", {\n            className: \"tabletext\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, report.analysis_complete ? \"Complete\" : \"In Progress\"), React.createElement(\"td\", {\n            className: \"tabletext\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, new Date(1000 * Number(report.timestamp)).toUTCString()));\n        })))));\n      } // else {\n      //     return (\n      //         <div className=\"fullscreen dashboardBG\">\n      //             {this.state.isLoading ? <Loading /> : null}\n      //             <MenuBar showSearch={true} searchFor={this.searchFor} setIsSignedIn={this.props.setIsSignedIn} title={\"Search By License Plate\"} />\n      //             <div className=\"noSearches\">\n      //                 <img src={Logo} alt=\"CrowdDash\" className=\"logo\" />\n      //                 <h1 className=\"noSearchText\">{\"No Logs found for that license plate\"}</h1>\n      //             </div>\n      //         </div>\n      //     )\n      // }\n\n    };\n\n    this.state = {\n      isSignedIn: props.isSignedIn,\n      isLoading: true,\n      licensePlate: undefined,\n      modal: {\n        open: false,\n        component: undefined\n      },\n      isSignUp: false,\n      violations: undefined,\n      profiles: undefined,\n      reports: [],\n      selection: undefined\n    };\n  }\n\n}\n\nexport default InsuranceView;","map":{"version":3,"sources":["/home/jason/projects/InsureCam/dashboard/src/Views/InsuranceView/index.jsx"],"names":["React","Component","Modal","Card","Table","Loading","MenuBar","ViolationMap","ViolationHistory","VehicleInfo","axios","serverUrl","InsuranceView","constructor","props","componentDidMount","endpoint","console","log","response","fetch","data","json","setState","reports","err","handleError","profiles","require","setTimeout","isLoading","searchFor","searchString","found","state","forEach","profile","licensePlate","selection","createModal","openModal","type","handleMarkerClick","report","window","location","href","id","render","setIsSignedIn","reverse","map","i","analysis_complete","Date","Number","timestamp","toUTCString","isSignedIn","undefined","modal","open","component","isSignUp","violations"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport { Card } from 'react-bootstrap'\nimport { Table } from 'react-bootstrap';\nimport Loading from '../../Components/Loading';\nimport MenuBar from \"../../Components/MenuBar\";\nimport ViolationMap from \"../../Components/ViolationMap\";\nimport ViolationHistory from \"../../Components/ViolationHistory\";\nimport VehicleInfo from \"../../Components/VehicleInfo\";\nimport axios from \"axios\";\n\nimport { serverUrl } from \"../../config\";\n\nimport \"./insurance.css\";\n\nclass InsuranceView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSignedIn: props.isSignedIn,\n            isLoading: true,\n            licensePlate: undefined,\n            modal: {\n                open: false,\n                component: undefined,\n            },\n            isSignUp: false,\n            violations: undefined,\n            profiles: undefined,\n            reports: [],\n            selection: undefined,\n        }\n    }\n\n    componentDidMount = async () => {\n        const endpoint = serverUrl + \"/api/report/\"\n        console.log(endpoint)\n        try {\n            const response = await fetch(endpoint);\n            const data = await response.json();\n            console.log(data)\n            this.setState({ reports: data.data })\n        } catch (err) {\n            this.handleError(err)\n        }\n        const profiles = await require(\"../../generatedData\");\n        this.setState({ profiles: profiles.profiles })\n        setTimeout(() => {\n            this.setState({ isLoading: false })\n        }, 100)\n    }\n\n    handleError = (err) => {\n        console.log(\"Error\", err)\n    }\n\n    searchFor = (searchString) => {\n        console.log(\"searchfor\", searchString)\n        let found = false\n        this.state.profiles.forEach(profile => {\n            if (profile.licensePlate === searchString) {\n                found = true;\n                this.setState({ selection: profile })\n            }\n        })\n\n        if (!found) this.setState({ selection: false })\n    }\n\n    createModal = () => {\n        return (\n            <Modal>\n                this.state.openComponent\n            </Modal>\n        )\n    }\n\n    openModal = (type) => {\n        return true;\n    }\n\n    handleMarkerClick = (report) => {\n        window.location.href = `/report/${report.id}`\n    }\n\n    render = () => {\n        if (this.state.isLoading) return <Loading />\n        if (this.state.selection) {\n            console.log(\"props in insurance\", this.props)\n            return (\n                <div className=\"fullscreen dashboardBG\">\n                    {this.state.isLoading ? <Loading /> : null}\n                    <MenuBar showSearch={true} searchFor={this.searchFor} setIsSignedIn={this.props.setIsSignedIn} title={\"Search By License Plate\"} />\n                    <div className=\"cardRow\">\n                        <Card id=\"vehicleCard\" onClick={() => this.openModal(\"history\")} className=\"text-center card\">\n                            <Card.Header className=\"cardHeader\">Vehicle Information</Card.Header>\n                            <VehicleInfo selection={this.state.selection} className=\"informationCard\" />\n                        </Card>\n                    </div>\n\n                    <div className=\"cardRow\">\n                        <Card id=\"historyCard\" onClick={() => this.openModal(\"history\")} className=\"text-center card\">\n                            <Card.Header className=\"cardHeader\">Logged Violations</Card.Header>\n                            <ViolationHistory selection={this.state.selection} className=\"historyCard\" />\n                        </Card>\n\n                        <Card id=\"mapCard\" onClick={() => this.openModal(\"map\")} className=\"text-center card\">\n                            <Card.Header className=\"cardHeader\">Violation Locations</Card.Header>\n                            <ViolationMap selection={this.state.selection} className=\"mapCard\" />\n                        </Card>\n                    </div>\n                    {this.createModal()}\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"fullscreen dashboardBG\">\n                    {this.state.isLoading ? <Loading /> : null}\n                    <MenuBar showSearch={true} searchFor={this.searchFor} setIsSignedIn={this.props.setIsSignedIn} title={\"Search By License Plate\"} />\n                    <h2 className=\"noSearchText\">Open Reports</h2>\n                    <div className=\"reportsWrapper\">\n                        <Table responsive id=\"table\">\n                            <thead className=\"headerRow\">\n                                <tr>\n                                    <th className=\"tableheader\">#</th>\n                                    <th className=\"tableheader\">Report ID</th>\n                                    <th className=\"tableheader\">Analysis Status</th>\n                                    <th className=\"tableheader\">Date</th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"tableBody\">\n                                {this.state.reports.reverse().map((report, i) => {\n                                    return (\n                                        <tr key={i} className=\"linkToViolation\" onClick={() => this.handleMarkerClick(report)}>\n                                            <td className=\"tabletext\">{i + 1}</td>\n                                            <td className=\"tabletext\">{report.id}</td>\n                                            <td className=\"tabletext\">{report.analysis_complete ? \"Complete\" : \"In Progress\"}</td>\n                                            <td className=\"tabletext\">{new Date(1000 * Number(report.timestamp)).toUTCString()}</td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </Table>\n\n                    </div>\n                </div>\n            );\n        }\n        // else {\n        //     return (\n        //         <div className=\"fullscreen dashboardBG\">\n        //             {this.state.isLoading ? <Loading /> : null}\n        //             <MenuBar showSearch={true} searchFor={this.searchFor} setIsSignedIn={this.props.setIsSignedIn} title={\"Search By License Plate\"} />\n        //             <div className=\"noSearches\">\n        //                 <img src={Logo} alt=\"CrowdDash\" className=\"logo\" />\n        //                 <h1 className=\"noSearchText\">{\"No Logs found for that license plate\"}</h1>\n        //             </div>\n        //         </div>\n        //     )\n        // }\n    }\n}\n\nexport default InsuranceView;"]},"metadata":{},"sourceType":"module"}