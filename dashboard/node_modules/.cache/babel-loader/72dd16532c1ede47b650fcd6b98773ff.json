{"ast":null,"code":"var _jsxFileName = \"/home/jason/projects/InsureCam/dashboard/src/Views/LoginView/index.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport Loading from '../../Components/Loading';\nimport Error from \"../../Components/Error\";\nimport Logo from \"../../Assets/CrowdDashLogoCropped.png\";\nimport './login.css';\n\nclass LoginView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      setTimeout(() => {\n        this.setState({\n          isLoading: false\n        });\n      }, 1000);\n    };\n\n    this.onChange = (e, type) => {\n      if (type === \"username\") {\n        this.setState({\n          username: e.target.value\n        });\n      } else {\n        this.setState({\n          password: e.target.value\n        });\n      }\n    };\n\n    this.onSubmit = () => {\n      let isSignedIn = false;\n      let signInType = undefined;\n      let failedSignIn = false;\n\n      if (this.state.username === this.insuranceUser && this.state.password) {\n        console.log(\"insurance sign in valid\");\n        isSignedIn = true;\n        signInType = \"insurance\";\n      } else {\n        console.log(\"invalid sign in\");\n        failedSignIn = true;\n      }\n\n      this.props.setIsSignedIn(true, () => {\n        this.setState({\n          isSignedIn: isSignedIn,\n          signInType: signInType,\n          failedSignIn: failedSignIn\n        });\n      });\n    };\n\n    this.signUp = () => {\n      this.setState({\n        isSignUp: true\n      });\n    };\n\n    this.login = () => {\n      this.setState({\n        isSignUp: false\n      });\n    };\n\n    this.render = () => {\n      console.log(\"state:\", this.state);\n\n      if (this.state.isSignedIn) {\n        return React.createElement(Redirect, {\n          to: \"/insurance\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      } else if (this.state.isLoading) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      } else {\n        const usernameProps = {\n          onChange: event => this.onChange(event, \"username\"),\n          type: \"text\",\n          placeholder: \"username\",\n          id: \"username\"\n        };\n        const passwordProps = {\n          onChange: event => this.onChange(event, \"password\"),\n          type: \"password\",\n          placeholder: \"password\",\n          id: \"password\"\n        };\n        return React.createElement(\"div\", {\n          className: \"fullscreen loginBackground\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, this.state.isLoading ? React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }) : null, React.createElement(\"img\", {\n          src: Logo,\n          alt: \"CrowdDash\",\n          className: \"loginLogo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"loginTab\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"loginSubHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, this.state.isSignUp ? \"Sign Up\" : \"Log In\"), React.createElement(\"div\", {\n          className: \"loginForm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(Form.Group, {\n          as: Row,\n          className: \"formGroup\",\n          id: \"usernameFormGroup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          className: \"formLabel\",\n          column: true,\n          sm: \"10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \" Username: \"), React.createElement(Col, {\n          sm: \"30\",\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(Form.Control, Object.assign({}, usernameProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        })))), React.createElement(Form.Group, {\n          as: Row,\n          className: \"formGroup\",\n          id: \"passwordFormGroup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          className: \"formLabel\",\n          column: true,\n          sm: \"10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \" Password: \"), React.createElement(Col, {\n          sm: \"30\",\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Form.Control, Object.assign({}, passwordProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        })))), React.createElement(Button, {\n          variant: \"submit\",\n          onClick: this.onSubmit,\n          id: \"signInButton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, this.state.isSignUp ? \"Sign Up\" : \"Log In\"))));\n      }\n    };\n\n    this.state = {\n      isSignedIn: false,\n      isLoading: true,\n      isSignUp: false,\n      signInType: undefined,\n      username: undefined,\n      password: undefined\n    };\n    this.insuranceUser = \"simran@intactinsurance.com\";\n  }\n\n}\n\nexport default LoginView;","map":{"version":3,"sources":["/home/jason/projects/InsureCam/dashboard/src/Views/LoginView/index.jsx"],"names":["React","Component","Redirect","Form","Row","Col","Button","Loading","Error","Logo","LoginView","constructor","props","componentDidMount","setTimeout","setState","isLoading","onChange","e","type","username","target","value","password","onSubmit","isSignedIn","signInType","undefined","failedSignIn","state","insuranceUser","console","log","setIsSignedIn","signUp","isSignUp","login","render","usernameProps","event","placeholder","id","passwordProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport Loading from '../../Components/Loading';\nimport Error from \"../../Components/Error\";\nimport Logo from \"../../Assets/CrowdDashLogoCropped.png\";\n\nimport './login.css';\n\nclass LoginView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSignedIn: false,\n            isLoading: true,\n            isSignUp: false,\n            signInType: undefined,\n            username: undefined,\n            password: undefined,\n        }\n        this.insuranceUser = \"simran@intactinsurance.com\"\n    }\n\n    componentDidMount = () => {\n        setTimeout(() => {\n            this.setState({ isLoading: false })\n        }, 1000)\n    }\n\n    onChange = (e, type) => {\n        if (type === \"username\") {\n            this.setState({ username: e.target.value })\n        } else {\n            this.setState({ password: e.target.value })\n        }\n    }\n\n    onSubmit = () => {\n        let isSignedIn = false;\n        let signInType = undefined;\n        let failedSignIn = false;\n        if (this.state.username === this.insuranceUser && this.state.password) {\n            console.log(\"insurance sign in valid\")\n            isSignedIn = true;\n            signInType = \"insurance\"\n        } else {\n            console.log(\"invalid sign in\")\n            failedSignIn = true\n        }\n        this.props.setIsSignedIn(true, () => {\n            this.setState({\n                isSignedIn: isSignedIn,\n                signInType: signInType,\n                failedSignIn: failedSignIn\n            })\n        })\n    }\n\n    signUp = () => {\n        this.setState({ isSignUp: true })\n    }\n\n    login = () => {\n        this.setState({ isSignUp: false })\n    }\n\n    render = () => {\n        console.log(\"state:\", this.state)\n        if (this.state.isSignedIn) {\n            return <Redirect to=\"/insurance\" />\n        } else if (this.state.isLoading) {\n            return <Loading />\n        } else {\n            const usernameProps = {\n                onChange: event => this.onChange(event, \"username\"),\n                type: \"text\",\n                placeholder: \"username\",\n                id: \"username\"\n            }\n\n            const passwordProps = {\n                onChange: event => this.onChange(event, \"password\"),\n                type: \"password\",\n                placeholder: \"password\",\n                id: \"password\"\n            }\n\n            return (\n                <div className=\"fullscreen loginBackground\">\n                    {this.state.isLoading ? <Loading /> : null}\n                    <img src={Logo} alt=\"CrowdDash\" className=\"loginLogo\" />\n                    {/* <h1 className=\"loginHeader\"> Welcome to CrowdDash </h1> */}\n                    <div className=\"loginTab\">\n                        <h2 className=\"loginSubHeader\">{this.state.isSignUp ? \"Sign Up\" : \"Log In\"}</h2>\n                        <div className=\"loginForm\" >\n                            <Form.Group as={Row} className=\"formGroup\" id=\"usernameFormGroup\">\n                                <Form.Label className=\"formLabel\" column sm=\"10\"> Username: </Form.Label>\n                                <Col sm=\"30\" className=\"column\">\n                                    <Form.Control {...usernameProps} />\n                                </Col>\n                            </Form.Group>\n\n                            <Form.Group as={Row} className=\"formGroup\" id=\"passwordFormGroup\">\n                                <Form.Label className=\"formLabel\" column sm=\"10\"> Password: </Form.Label>\n                                <Col sm=\"30\" className=\"column\">\n                                    <Form.Control {...passwordProps} />\n                                </Col>\n                            </Form.Group>\n                            <Button variant=\"submit\" onClick={this.onSubmit} id=\"signInButton\">{this.state.isSignUp ? \"Sign Up\" : \"Log In\"}</Button>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default LoginView;"]},"metadata":{},"sourceType":"module"}